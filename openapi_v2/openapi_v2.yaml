swagger: '2.0'
info:
  description: OpenDSR
  version: 2.0.0
  title: OpenDSR - OpenAPI v2
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /opendsr

# tags are used for organizing operations
tags:
- name: Data Controller
  description: Data Controller (GDPR) / Business (CCPA)
- name: Data Processor
  description: Data Processor (GDPR) / Vendor (CCPA)

schemes:
- http
- https

consumes:
  - application/json
produces:
  - application/json

paths:
  /discovery:
    get:
      tags:
      - Data Processor
      summary: Get OpenDSR discovery
      operationId: getDiscovery
      description: >
        OpenDSR service implementations MUST provide an endpoint that describes their support for the
        OpenDSR specification via HTTP GET.
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties:
              api_version:
                $ref: '#/definitions/ApiVersion'
              supported_identities:
                type: array
                items:
                  $ref: '#/definitions/Identity'
              supported_subject_request_types:
                $ref: '#/definitions/SubjectRequestType'
              processor_certificate:
                type: string
                example: https://exampleprocessor.com/cert.pem
        401:
          $ref: '#/definitions/Error'
        500:
          $ref: '#/definitions/Error'
  /requests:
    post:
      tags:
      - Data Processor
      summary: Post a OpenDSR request
      operationId: postRequests
      description: |
        OpenDSR service implementations MUST provide an endpoint that creates OpenDSR JSON requests via HTTP POST.
        Controllers MUST submit requests with the following parameters.
      parameters:
        - in: body
          name: request
          schema:
            type: object
            properties:
              regulation:
                type: string
                description: |
                  string value representing the regulation that this request is covered by: 'gdpr' or 'ccpa' are currently supported.
                enum:
                  - gdpr
                  - ccpa
                example: gdpr
              subject_request_id:
                type: "string"
                description: |
                  UUID v4 string. This MUST be generated by the Controller at the time of request submission to a Processor.
                example: "a7551968-d5d6-44b2-9831-815ac9017798"
              subject_request_type:
                $ref: '#/definitions/SubjectRequestType'
              submitted_time:
                type: "string"
                example: "2018-10-02T15:00:00Z"
              subject_identities:
                type: "array"
                description: array of Identity objects
                items:
                  $ref: '#/definitions/Identity'
              api_version:
                $ref: '#/definitions/ApiVersion'
              status_callback_urls:
                type: array
                items:
                  type: string
                example: https://examplecontroller.com/opendsr/callbacks
              extensions:
                $ref: '#/definitions/Extensions'
      responses:
        201:
          description: request created
          schema:
            type: object
            properties:
              controller_id:
                type: string
                description: string indicating the unique identity of the Controller in the Processorâ€™s system.
                example: example_controller_id
              expected_completion_time:
                type: string
                description: RFC 3339 date string representing the time when the Processor expects to fulfill the request.
                example: 2018-11-01T15:00:01Z
              received_time:
                type: string
                description: RFC 3339 date string representing the time when the Processor received the request.
                example: 2018-10-02T15:00:01Z
              encoded_request:
                type: string
                description: Base64 encoding of the entire body of the OpenDSR request. Controllers MUST NOT log or store this.
                example: '<BASE64 ENCODED REQUEST>'
              subject_request_id:
                type: string
                description: UUID v4 string from the originating OpenDSR request.
                example: a7551968-d5d6-44b2-9831-815ac9017798
        400:
          $ref: '#/definitions/Error'
        401:
          $ref: '#/definitions/Error'
        500:
          $ref: '#/definitions/Error'

definitions:
  ApiVersion:
    type: string
    example: "2.0"
  SubjectRequestType:
    type: string
    description: |
      string value representing the type of OpenDSR Request. Supported values: "erasure", "portability", "access"
    enum: [access, portability, erasure]
    example: erasure
  Identity:
    type: object
    properties:
      identity_type:
        type: string
        description: string value representing the form of identity.
        enum:
          - android_advertising_id
          - android_id
          - controller_customer_id
          - email
          - fire_advertising_id
          - ios_advertising_id
          - ios_vendor_id
          - microsoft_advertising_id
          - microsoft_publisher_id
          - roku_advertising_id
          - roku_publisher_id
        example: email
      idemtity_format:
        type: string
        description: string value representing the encoding of the identity
        enum:
          - md5
          - raw
          - sha1
          - sha256
        example: raw
      identity_value:
        type: string
        description: string value representing the identity.
        example: johndoe@example.com
  Extensions:
    type: object
    description: |
      OpenDSR requests may contain an extensions object, composed of a series of child-objects, keyed by a processor domain.
      - The domain of each extension MUST match the processor's OpenDSR domain.
      - Extensions MUST not be used for or contain authentication information.
      - Processors MUST only implement an extension for items that do not already fit into the generic spec.
    example:
      - example-processor.com:
          foo-processor-custom-id: 123456
          property_id: "123456"
      - example-other-processor.com:
          foo-other-processor-custom-id: 654321
  Error:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
            description: Integer code indicating the HTTP status of the response.
            example: 400
          message:
            type: string
            description: String description of the issue that was encountered.
            example: IllegalArgumentException
          errors:
            type: array
            items:
              type: string
              example: subject_request_id field is required.

